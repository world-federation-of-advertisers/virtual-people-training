load("@rules_cc//cc:defs.bzl", "cc_binary", "cc_test")

package(default_visibility = ["//visibility:private"])

cc_binary(
    name = "golden_generator",
    srcs = ["golden_generator.cc"],
    deps = [
        "@com_github_google_glog//:glog",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/flags:flag",
        "@com_google_absl//absl/flags:parse",
        # "@virtual_people_common//src/main/cc/wfa/virtual_people/common/integration_testing_framework:golden_generator",
        "@virtual_people_common//src/main/proto/wfa/virtual_people/common:config_cc_proto",
        "@wfa_common_cpp//src/main/cc/common_cpp/protobuf_util:textproto_io",
    ],
)

cc_test(
    name = "integration_test",
    srcs = ["integration_test.cc"],
    data = [
        "//src/main/cc/wfa/virtual_people/training/model_compiler:compiler_main",
        "//src/test/cc/wfa/virtual_people/training/model_compiler/test_data",
        "//src/test/cc/wfa/virtual_people/training/util/test_data",
        "@virtual_people_common//src/main/proto/wfa/virtual_people/common:model_proto",
    ],
    deps = [
        "@bazel_tools//tools/cpp/runfiles",
        "@com_github_google_glog//:glog",
        "@com_google_absl//absl/status",
        "@com_google_googletest//:gtest_main",
        "@com_google_protobuf//:protobuf",
        "@virtual_people_common//src/main/proto/wfa/virtual_people/common:config_cc_proto",
        "@wfa_common_cpp//src/main/cc/common_cpp/protobuf_util:textproto_io",
    ],
)
