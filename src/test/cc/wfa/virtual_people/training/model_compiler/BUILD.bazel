load("@rules_cc//cc:defs.bzl", "cc_test")

package(default_visibility = ["//visibility:private"])

cc_test(
    name = "specification_utils_test",
    srcs = ["specification_utils_test.cc"],
    data = [
        "//src/test/cc/wfa/virtual_people/training/model_compiler/test_data:activity_density_function.textproto",
        "//src/test/cc/wfa/virtual_people/training/model_compiler/test_data:census_records.textproto",
        "//src/test/cc/wfa/virtual_people/training/model_compiler/test_data:conditional_assignment.textproto",
        "//src/test/cc/wfa/virtual_people/training/model_compiler/test_data:conditional_merge.textproto",
        "//src/test/cc/wfa/virtual_people/training/model_compiler/test_data:country_code_1_filter.textproto",
        "//src/test/cc/wfa/virtual_people/training/model_compiler/test_data:multiplicity.textproto",
        "//src/test/cc/wfa/virtual_people/training/model_compiler/test_data:multipool.textproto",
        "//src/test/cc/wfa/virtual_people/training/model_compiler/test_data:sparse_update_matrix.textproto",
        "//src/test/cc/wfa/virtual_people/training/model_compiler/test_data:stop_node_tree.textproto",
        "//src/test/cc/wfa/virtual_people/training/model_compiler/test_data:stop_node_tree_config.textproto",
        "//src/test/cc/wfa/virtual_people/training/model_compiler/test_data:update_matrix.textproto",
    ],
    deps = [
        "//src/main/cc/wfa/virtual_people/training/model_compiler:compiler",
        "//src/main/proto/wfa/virtual_people/training:model_config_cc_proto",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/status:statusor",
        "@com_google_googletest//:gtest_main",
        "@com_google_protobuf//:protobuf",
        "@virtual_people_common//src/main/proto/wfa/virtual_people/common:field_filter_cc_proto",
        "@virtual_people_common//src/main/proto/wfa/virtual_people/common:model_cc_proto",
        "@wfa_common_cpp//src/main/cc/common_cpp/testing:common_matchers",
        "@wfa_common_cpp//src/main/cc/common_cpp/testing:status",
    ],
)

cc_test(
    name = "compiler_test",
    srcs = ["compiler_test.cc"],
    data = [
        "//src/test/cc/wfa/virtual_people/training/model_compiler/test_data:compiled_node_for_population_node.textproto",
        "//src/test/cc/wfa/virtual_people/training/model_compiler/test_data:compiled_node_for_population_node_discretization.textproto",
        "//src/test/cc/wfa/virtual_people/training/model_compiler/test_data:compiled_node_for_population_node_kappa_less_than_one.textproto",
        "//src/test/cc/wfa/virtual_people/training/model_compiler/test_data:compiled_node_for_population_node_redistribute_probabilities_for_empty_pools.textproto",
        "//src/test/cc/wfa/virtual_people/training/model_compiler/test_data:country_code_1_filter.textproto",
        "//src/test/cc/wfa/virtual_people/training/model_compiler/test_data:model_node_config_population_node.textproto",
        "//src/test/cc/wfa/virtual_people/training/model_compiler/test_data:model_node_config_population_node_alpha_not_sum_to_one.textproto",
        "//src/test/cc/wfa/virtual_people/training/model_compiler/test_data:model_node_config_population_node_discretization.textproto",
        "//src/test/cc/wfa/virtual_people/training/model_compiler/test_data:model_node_config_population_node_kappa_less_than_one.textproto",
        "//src/test/cc/wfa/virtual_people/training/model_compiler/test_data:model_node_config_population_node_no_adf.textproto",
        "//src/test/cc/wfa/virtual_people/training/model_compiler/test_data:model_node_config_population_node_no_census.textproto",
        "//src/test/cc/wfa/virtual_people/training/model_compiler/test_data:model_node_config_population_node_no_multipool.textproto",
        "//src/test/cc/wfa/virtual_people/training/model_compiler/test_data:model_node_config_population_node_redistribute_probabilities_for_empty_pools.textproto",
        "//src/test/cc/wfa/virtual_people/training/model_compiler/test_data:multiplicity.textproto",
        "//src/test/cc/wfa/virtual_people/training/model_compiler/test_data:true_filter.textproto",
        "//src/test/cc/wfa/virtual_people/training/model_compiler/test_data:update_matrix.textproto",
    ],
    deps = [
        "//src/main/cc/wfa/virtual_people/training/model_compiler:compiler",
        "//src/main/proto/wfa/virtual_people/training:model_config_cc_proto",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/status:statusor",
        "@com_google_googletest//:gtest_main",
        "@com_google_protobuf//:protobuf",
        "@virtual_people_common//src/main/proto/wfa/virtual_people/common:model_cc_proto",
        "@wfa_common_cpp//src/main/cc/common_cpp/protobuf_util:textproto_io",
        "@wfa_common_cpp//src/main/cc/common_cpp/testing:common_matchers",
        "@wfa_common_cpp//src/main/cc/common_cpp/testing:status",
    ],
)

cc_test(
    name = "field_filter_utils_test",
    srcs = ["field_filter_utils_test.cc"],
    deps = [
        "//src/main/cc/wfa/virtual_people/training/model_compiler:field_filter_utils",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/status:statusor",
        "@com_google_googletest//:gtest_main",
        "@com_google_protobuf//:protobuf",
        "@virtual_people_common//src/main/proto/wfa/virtual_people/common:field_filter_cc_proto",
        "@wfa_common_cpp//src/main/cc/common_cpp/testing:common_matchers",
        "@wfa_common_cpp//src/main/cc/common_cpp/testing:status",
    ],
)

cc_test(
    name = "compiler_main_test",
    srcs = ["compiler_main_test.cc"],
    data = [
        ":compiler_main_population_node_genrule",
        ":compiler_main_population_node_redistribute_probabilities_for_empty_pools_genrule",
        ":compiler_main_population_node_kappa_less_than_one_genrule",
        ":compiler_main_population_node_discretization_genrule",
        "//src/test/cc/wfa/virtual_people/training/model_compiler/test_data:compiled_node_for_population_node.textproto",
        "//src/test/cc/wfa/virtual_people/training/model_compiler/test_data:compiled_node_for_population_node_redistribute_probabilities_for_empty_pools.textproto",
        "//src/test/cc/wfa/virtual_people/training/model_compiler/test_data:compiled_node_for_population_node_kappa_less_than_one.textproto",
        "//src/test/cc/wfa/virtual_people/training/model_compiler/test_data:compiled_node_for_population_node_discretization.textproto",
    ],
    deps = [
        "//src/main/proto/wfa/virtual_people/training:model_config_cc_proto",
        "@com_github_google_glog//:glog",
        "@com_google_googletest//:gtest_main",
        "@com_google_protobuf//:protobuf",
    ],
)

genrule(
    name = "compiler_main_population_node_genrule",
    srcs = ["//src/test/cc/wfa/virtual_people/training/model_compiler/test_data:model_node_config_population_node.textproto"],
    outs = ["compiled_node_for_population_node.textproto"],
    cmd = "$(location //src/main/cc/wfa/virtual_people/training/model_compiler:compiler_main) " + 
        "--input_path $< " +
        "--output_path $@", 
    exec_tools = ["//src/main/cc/wfa/virtual_people/training/model_compiler:compiler_main"],
)

genrule(
    name = "compiler_main_population_node_redistribute_probabilities_for_empty_pools_genrule",
    srcs = ["//src/test/cc/wfa/virtual_people/training/model_compiler/test_data:model_node_config_population_node_redistribute_probabilities_for_empty_pools.textproto"],
    outs = ["compiled_node_for_population_node_redistribute_probabilities_for_empty_pools.textproto"],
    cmd = "$(location //src/main/cc/wfa/virtual_people/training/model_compiler:compiler_main) " + 
        "--input_path $< " +
        "--output_path $@", 
    exec_tools = ["//src/main/cc/wfa/virtual_people/training/model_compiler:compiler_main"],
)

genrule(
    name = "compiler_main_population_node_kappa_less_than_one_genrule",
    srcs = ["//src/test/cc/wfa/virtual_people/training/model_compiler/test_data:model_node_config_population_node_kappa_less_than_one.textproto"],
    outs = ["compiled_node_for_population_node_kappa_less_than_one.textproto"],
    cmd = "$(location //src/main/cc/wfa/virtual_people/training/model_compiler:compiler_main) " + 
        "--input_path $< " +
        "--output_path $@", 
    exec_tools = ["//src/main/cc/wfa/virtual_people/training/model_compiler:compiler_main"],
)

genrule(
    name = "compiler_main_population_node_discretization_genrule",
    srcs = ["//src/test/cc/wfa/virtual_people/training/model_compiler/test_data:model_node_config_population_node_discretization.textproto"],
    outs = ["compiled_node_for_population_node_discretization.textproto"],
    cmd = "$(location //src/main/cc/wfa/virtual_people/training/model_compiler:compiler_main) " + 
        "--input_path $< " +
        "--output_path $@", 
    exec_tools = ["//src/main/cc/wfa/virtual_people/training/model_compiler:compiler_main"],
)
